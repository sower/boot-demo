Configuration:
  status: warn # 用于控制log4j2日志框架本身的日志级别
  monitorInterval: 30 # 每隔多少秒重新读取配置文件，可以不重启应用的情况下修改配置
#  packages: "me.boot.log" # 指定扫描的包，如果不指定，默认扫描所有包

  Properties: # 定义全局变量
    Property:
      - name: log.level.console
        value: info
      - name: log.path
        value: /app/logs
      - name: project.name
        value: Demo
      - name: log.pattern
        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} -%5p ${PID:-} [%15.15t] %-30.30C{1.} : %m%n"

  Appenders:
    Console:  # 输出到控制台
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        pattern: "%d %highlight{%-5level}{ERROR=bright red, WARN=yellow bold, INFO=green, DEBUG=cyan bold, TRACE=white} [%X{X-TraceId}] %style{[%t]}{bright,magenta} %style{%c{1.}.%M(%L)}{cyan}: %m%n"

    #   启动日志
    RollingFile:
      - name: ROLLING_FILE
        fileName: ${log.path}/daily/${project.name}.log        #输出文件的地址
        filePattern: "${log.path}/${date:yyyy-MM-dd}/${project.name}-%d{yyyy-MM-dd}-%i.log.gz"   #文件生成规则
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          #  一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:   # 日志级别过滤器
            - level: error   # 日志级别
              onMatch: DENY  # 高于的拒绝
              onMismatch: NEUTRAL  # 低于的
            - level: info
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          SizeBasedTriggeringPolicy: # 日志拆分规则
            size: "50MB"
          TimeBasedTriggeringPolicy:  # 按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy:     # 单目录下，文件最多20个，超过会删除最早之前的
          max: 20
          Delete:
            basePath: "${log.path}"
            maxDepth: "2"
            IfLastModified:
              age: "30d"

  Loggers:
    #日志器分根日志器Root和自定义日志器，当根据日志名字获取不到指定的日志器时就使用Root作为默认的日志器
    Root:
      level: info
      AppenderRef:
        - ref: CONSOLE
#        - ref: ROLLING_FILE